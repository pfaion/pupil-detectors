################################################################################
# ENVIRONMENT TEMPLATES
################################################################################

# can't merge arrays in YAML so we have to duplicate stuff between 36 and 37
# and include all variables that are relevant across all operating systems
env_py36: &env_py36
  env:
    - PYTHON_VERSION=3.6.8
    - PY_MM=36
    - TOXENV=py${PY_MM}
    - PATH=/c/Python${PY_MM}:/c/Python${PY_MM}/Scripts:$PATH
env_py37: &env_py37
  env:
    - PYTHON_VERSION=3.7.4
    - PY_MM=37
    - TOXENV=py${PY_MM}
    - PATH=/c/Python${PY_MM}:/c/Python${PY_MM}/Scripts:$PATH


################################################################################
# OS JOB TEMPLATES
################################################################################

osx_base_job: &osx_base_job
  os: osx
  osx_image: xcode9.2
  language: sh
  before_install:
    # install things that take longer than 10min with -v for travis to not stop!
    - brew install -v gcc
    - brew install ceres-solver
    - wget https://github.com/opencv/opencv/archive/3.4.6.zip
    - unzip 3.4.6.zip
    - cd opencv-3.4.6
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DBUILD_LIST=core,highgui,videoio,imgcodecs,imgproc,video ..
    - make -j8
    - make install
    - cd ../..
    - brew upgrade pyenv
    - export PATH="/Users/travis/.pyenv/shims:${PATH}"
    - pyenv install -s 3.6.8
    - pyenv install -s 3.7.4
  install:
    - mkdir -p wheelhouse
    - pyenv global 3.6.8
    - pip wheel --no-deps -w wheel_test .
    - pip install tox
    - tox --installpkg wheel_test/*.whl -e py36
    - mv wheel_test/*.whl wheelhouse/

    - pyenv global 3.7.4
    - pip wheel --no-deps -w wheel_test .
    - pip install tox
    - tox --installpkg wheel_test/*.whl -e py37
    - mv wheel_test/*.whl wheelhouse/

osx_new_job: &osx_new_job
  os: osx
  osx_image: xcode11.2
  language: sh
  before_install:
    - brew install ceres-solver opencv@3
    - brew upgrade pyenv
    - export PATH="/Users/travis/.pyenv/shims:${PATH}"
    - pyenv install -s 3.6.8
    - pyenv install -s 3.7.4
  install:
    - mkdir -p wheelhouse
    - pyenv global 3.6.8
    - pip wheel --no-deps -w wheel_test .
    - pip install tox
    - tox --installpkg wheel_test/*.whl -e py36
    - mv wheel_test/*.whl wheelhouse/

    - pyenv global 3.7.4
    - pip wheel --no-deps -w wheel_test .
    - pip install tox
    - tox --installpkg wheel_test/*.whl -e py37
    - mv wheel_test/*.whl wheelhouse/

osx_13: &osx_13
  os: osx
  osx_image: xcode10.1
  language: sh
  before_install:
    - brew install ceres-solver opencv@3
    - brew upgrade pyenv
    - export PATH="/Users/travis/.pyenv/shims:${PATH}"
    - pyenv install -s 3.6.8
    - pyenv install -s 3.7.4
  install:
    - mkdir -p wheelhouse
    - pyenv global 3.6.8
    - pip wheel --no-deps -w wheel_test .
    - pip install tox
    - tox --installpkg wheel_test/*.whl -e py36
    - mv wheel_test/*.whl wheelhouse/

    - pyenv global 3.7.4
    - pip wheel --no-deps -w wheel_test .
    - pip install tox
    - tox --installpkg wheel_test/*.whl -e py37
    - mv wheel_test/*.whl wheelhouse/

    
win_base_job: &win_base_job
  os: windows
  language: sh
  before_install:
    - mkdir -p dependencies
    - cd dependencies

    # Eigen3
    - wget -O eigen3.zip https://bitbucket.org/eigen/eigen/get/3.3.3.zip
    - unzip -q eigen3.zip
    - mv eigen-eigen-* eigen

    # Opencv
    - wget -O opencv.zip https://github.com/opencv/opencv/archive/3.4.5.zip
    - unzip -q opencv.zip
    - cd opencv-3.4.5
    - mkdir -p build
    - cd build
    - >
      cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_LIST=world,core,highgui,videoio,imgcodecs,imgproc,video -DCMAKE_INSTALL_PREFIX=../../opencv -G"Visual Studio 15 2017 Win64"
    - cmake --build . --target INSTALL --config Release
    - cd ../..

    # Ceres with Miniglog
    - wget -O ceres-solver.tar.gz http://ceres-solver.org/ceres-solver-1.14.0.tar.gz
    - tar -xzf ceres-solver.tar.gz
    - cd ceres-solver-1.14.0
    - >
      cmake .
      -DCMAKE_INSTALL_PREFIX=../ceres-solver
      -DEIGEN_INCLUDE_DIR_HINTS=../eigen
      -DMINIGLOG=ON
      -DCERES_USE_OPENMP=ON
      -DBUILD_TESTING=OFF
      -DBUILD_EXAMPLES=OFF
      -DSCHUR_SPECIALIZATIONS=OFF
      -G"Visual Studio 15 2017 Win64"
    - cmake --build . --config Release --target ceres
    - cmake --install .
    - cd ..

    # Set build parameters
    - EIGEN_DIR=`pwd`/eigen
    - OPENCV_DIR=`pwd`/opencv
    - CERES_DIR=`pwd`/ceres-solver
    - cd ..

  install:
    - choco install python --version 3.6.8
    - PATH=/c/Python36:/c/Python36/Scripts:$PATH
    - pip wheel --no-deps -w wheel_test .
    - tox --installpkg wheel_test/*.whl -e py36
    - mv wheel_test/*.whl wheelhouse/

    - choco install python --version 3.7.4
    - PATH=/c/Python37:/c/Python37/Scripts:$PATH
    - pip wheel --no-deps -w wheel_test .
    - tox --installpkg wheel_test/*.whl -e py37
    - mv wheel_test/*.whl wheelhouse/

ubuntu_base_job: &ubuntu_base_job
  os: linux
  language: sh
  services: docker
  before_install:
    - docker pull pupillabs/pupil-detectors:linux-latest
  install:
    - chmod +x ./.travis/linux_build_wheels.sh
    - >
      docker run --rm
      -v `pwd`:/io
      pupillabs/pupil-detectors:linux-latest
      /io/.travis/linux_build_wheels.sh
  

################################################################################
# DEFINE JOB MATRIX
################################################################################

matrix:
  include:
    # - name: "OSX 10.12 (xcode9.2)"
    #   <<: *osx_base_job

    # - name: "OSX 10.14 (xcode11.2)"
    #   <<: *osx_new_job

    - name: "OSX 10.13 (xcode10.1)"
      <<: *osx_13

    - name: "Windows"
      <<: *win_base_job

    # - name: "Ubuntu (manylinux)"
    #   <<: *ubuntu_base_job


################################################################################
# RUN AND DEPLOY (OS INDEPENDENT)
################################################################################


script:
  - ls wheelhouse

# script:
#   - tox --installpkg ./dist/pupil_apriltags*.whl

# deploy_template: &deploy_template
#   on:
#     tags: true
#     branch: master
#   skip_cleanup: true

# deploy:
#   - provider: releases
#     <<: *deploy_template
#     api_key: $GitHubOAUTH
#     file_glob: true
#     file: "./dist/pupil_apriltags*"
#   - provider: script
#     <<: *deploy_template
#     script: bash ./.travis/pypi_deploy.sh